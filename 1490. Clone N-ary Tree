Given a root of an N-ary tree, return a deep copy (clone) of the tree.

Each node in the n-ary tree contains a val (int) and a list (List[Node]) of its children.

class Node {
    public int val;
    public List<Node> children;
}
Nary-Tree input serialization is represented in their level order traversal, each group of children is separated by the null value (See examples).

/***
这道题比较简单：你想让我复制整棵树，那么我先复制根节点，然后递归调用 cloneTree 去复制所有子树（子问题）。
***/

/*
// Definition for a Node.
class Node {
    public int val;
    public List<Node> children;

    
    public Node() {
        children = new ArrayList<Node>();
    }
    
    public Node(int _val) {
        val = _val;
        children = new ArrayList<Node>();
    }
    
    public Node(int _val,ArrayList<Node> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
    public Node cloneTree(Node root) {
        if (root == null) {
            return null;
        }
        Node copyNode = new Node(root.val);
        copyNode.children = new LinkedList<>();
        for (Node child : root.children) {
            copyNode.children.add(cloneTree(child));
        }
        return copyNode;
    }
}

Given a valid parentheses string s, return the nesting depth of s. The nesting depth is the maximum number of nested parentheses.

 

Example 1:

Input: s = "(1+(2*3)+((8)/4))+1"

Output: 3

Explanation:

Digit 8 is inside of 3 nested parentheses in the string.

class Solution {
    public int maxDepth(String s) {
        if (s == null || s.length() == 0) {
            return 0;
        }
        int res = 0;
        int count = 0;
        for (int i = 0; i < s.length(); i++) {
            if (s.charAt(i) == '(') {
                count++;
                if (count > res) {
                    res = count;
                }
            } else if (s.charAt(i) == ')'){
                count--;
            }
        }
        return res;
    }
}

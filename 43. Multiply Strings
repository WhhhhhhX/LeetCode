Given two non-negative integers num1 and num2 represented as strings, return the product of num1 and num2, also represented as a string.

Note: You must not use any built-in BigInteger library or convert the inputs to integer directly.

 

Example 1:

Input: num1 = "2", num2 = "3"
Output: "6"
Example 2:

Input: num1 = "123", num2 = "456"
Output: "56088"


// `num1[i] * num2[j]` will be placed at indices `[i + j`, `i + j + 1]` 
class Solution {
    public String multiply(String num1, String num2) {
        if (num1 == null || num2 == null) return "0";
        int l1 = num1.length();
        int l2 = num2.length();
        int[] ans = new int[l1 + l2];
        for (int i = l1 - 1; i >= 0; i--) {
            for (int j = l2 - 1; j >= 0; j--) {
                int product = (num1.charAt(i) - '0') * (num2.charAt(j) - '0');
                int p1 = i + j, p2 = i + j + 1;
                int sum = product + ans[p2];
                ans[p1] += sum / 10;
                ans[p2] = sum % 10;
            }
        }

        StringBuilder sb = new StringBuilder();
        for (Integer i : ans) {
            if (!(sb.length() == 0 && i == 0)) {
                sb.append(i);
            }
        }
        return sb.length() == 0 ? "0" : sb.toString();
    }
}

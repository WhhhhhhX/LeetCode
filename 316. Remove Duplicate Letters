Given a string s, remove duplicate letters so that every letter appears once and only once. You must make sure your result is 
the smallest in lexicographical order
 among all possible results.

 

Example 1:

Input: s = "bcabc"
Output: "abc"
Example 2:

Input: s = "cbacdcbc"
Output: "acdb"

/***
统计各个字母出现的次数。然后再次进行遍历，一个一个往sb中加，进行判断操作。
https://www.youtube.com/watch?v=SrlvMmfG8sA
***/

class Solution {
    public String removeDuplicateLetters(String s) {
        int[] freq = new int[26];
        boolean[] used = new boolean[26];
        StringBuilder sb = new StringBuilder();
        char[] arr = s.toCharArray();
        for (char c : arr) {
            freq[c - 'a']++;
        }

        for (char c : arr) {
            freq[c - 'a']--;
            if (used[c - 'a']) {
                continue;
            }

            while (sb.length() > 0 && sb.charAt(sb.length() - 1) > c && freq[sb.charAt(sb.length() - 1) - 'a'] > 0) {
                used[sb.charAt(sb.length() - 1) - 'a'] = false;
                sb.deleteCharAt(sb.length() - 1);
            }
            sb.append(c);
            used[c - 'a'] = true;
        }
        return sb.toString();
    }
}

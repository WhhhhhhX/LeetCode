Given a string s representing a valid expression, implement a basic calculator to evaluate it, and return the result of the evaluation.

Note: You are not allowed to use any built-in function which evaluates strings as mathematical expressions, such as eval().

 

Example 1:

Input: s = "1 + 1"
Output: 2
Example 2:

Input: s = " 2-1 + 2 "
Output: 3
Example 3:

Input: s = "(1+(4+5+2)-3)+(6+8)"
Output: 23

//依然还是到下一个+/-和）去处理上一个操作运算结果。sign不用+/-来表示，由于只有加减，可以用1 和-1去表示，然后加到res里即可。

class Solution {
    public int calculate(String s) {
        if (s == null || s.length() == 0) {
            return 0;
        }
        Deque<Integer> stack = new ArrayDeque<>();
        int sign = 1;
        int res = 0;
        int num = 0;
        for (int i = 0; i < s.length(); i++) {
            char c = s.charAt(i);
            if (Character.isDigit(c)) {
                num = num * 10 + (c - '0');
            } else if (c == '+') {
                res += num * sign;
                num = 0;
                sign = 1;
            } else if (c == '-') {
                res += num * sign;
                num = 0;
                sign = -1;
            } else if (c == '(') {
                stack.offerFirst(res);
                stack.offerFirst(sign);
                res = 0;
                sign = 1;
            } else if (c == ')') {
                res += num * sign;
                num = 0;
                res *= stack.pollFirst();
                res += stack.pollFirst();
            }
        }
        res += num * sign;
        return res;
    }
}

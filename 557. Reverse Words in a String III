Given a string s, reverse the order of characters in each word within a sentence while still preserving whitespace and initial word order.

 

Example 1:

Input: s = "Let's take LeetCode contest"
Output: "s'teL ekat edoCteeL tsetnoc"
Example 2:

Input: s = "Mr Ding"
Output: "rM gniD"


class Solution {
    public String reverseWords(String s) {
        if (s == null || s.length() == 0) {
            return s;
        }
        
        char[] arr = s.toCharArray();
        int start = 0;
        int end = 0;
        for (int j = 0; j < s.length(); j++) {
            if (arr[j] != ' ' && (j == 0 || arr[j - 1] == ' ')) {
                start = j;
            }
            if (arr[j] != ' ' && (j == arr.length - 1 || arr[j + 1] == ' ')) {
                end = j;
                swap(arr, start, end);
            }
        }
        return new String(arr);
    }
    private void swap(char[] arr, int i, int j) {
        while (i < j) {
            char temp = arr[i];
            arr[i] = arr[j];
            arr[j] = temp;
            i++;
            j--;
        }
    }
}

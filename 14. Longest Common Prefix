Write a function to find the longest common prefix string amongst an array of strings.

If there is no common prefix, return an empty string "".

 //先把第一个str当作prefix，然后依次遍历strs，看此时的prefix是否是后面的元素的prefix。如果不是，那就一直缩小prefix

Example 1:

Input: strs = ["flower","flow","flight"]
Output: "fl"
Example 2:

Input: strs = ["dog","racecar","car"]
Output: ""
Explanation: There is no common prefix among the input strings.


class Solution {
    public String longestCommonPrefix(String[] strs) {
        if (strs == null || strs.length == 0) {
            return "";
        }
        StringBuilder sb = new StringBuilder();
        char[] arr = strs[0].toCharArray();
        for (int i = 0; i < arr.length; i++) {
            sb.append(arr[i]);
        }
        for (int i = 1; i < strs.length; i++) {
            while (strs[i].indexOf(sb.toString()) != 0) {
                sb.deleteCharAt(sb.length() - 1);
            }
        }
        return sb.toString();
    }
}

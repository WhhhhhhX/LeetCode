Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.

Assume the environment does not allow you to store 64-bit integers (signed or unsigned).

 

Example 1:

Input: x = 123
Output: 321
Example 2:

Input: x = -123
Output: -321
Example 3:

Input: x = 120
Output: 21

//要记得判断是否当前的结果* 10 大于Integer.MAX_VALUE 并且lastdigit> 7,  或者小于indeteger min并且last digit < -8，如果是，则return 0
class Solution {
    public int reverse(int x) {
        int finalNum = 0;
        while (x != 0) {
            int lastDig = x % 10;

            // 溢出检查
            if (finalNum > Integer.MAX_VALUE / 10 || (finalNum == Integer.MAX_VALUE / 10 && lastDig > 7)) {
                return 0;
            }
            if (finalNum < Integer.MIN_VALUE / 10 || (finalNum == Integer.MIN_VALUE / 10 && lastDig < -8)) {
                return 0;
            }

            finalNum = finalNum * 10 + lastDig;
            x = x / 10;
        }
        return finalNum;
    }
}

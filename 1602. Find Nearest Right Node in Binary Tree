Given the root of a binary tree and a node u in the tree, return the nearest node on the same level that is to the right of u, or return null if u is the rightmost node in its level.


/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    private TreeNode res = null;
    private int depthU = -1;
    public TreeNode findNearestRightNode(TreeNode root, TreeNode u) {
        if (root == null) {
            return null;
        }
        
        helper(root, u.val, 0);
        return res;
    }
    private void helper(TreeNode root, int u, int depth) {
        if (root == null || res != null) {
            return;
        }

        if (root.val == u) {
            depthU = depth;
        } else if (depth == depthU) {
            res = root;
            return;
        }
        
        helper(root.left, u, depth + 1);
        helper(root.right, u, depth + 1);
    }
}

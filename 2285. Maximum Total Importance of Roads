You are given an integer n denoting the number of cities in a country. The cities are numbered from 0 to n - 1.

You are also given a 2D integer array roads where roads[i] = [ai, bi] denotes that there exists a bidirectional road connecting cities ai and bi.

You need to assign each city with an integer value from 1 to n, where each value can only be used once. The importance of a road is then defined as the sum of the values of the two cities it connects.

Return the maximum total importance of all roads possible after assigning the values optimally.


/***
这道题有一个特点，就是要使最后结果最大，一定是将最大的值n分配到 有最多edge的city上，然后依次递减，这样最后的结果一定是最大的。

比如 0-1， 1-3， 0-2 0-4，这几条边，0和1 2 4都有edge，那0的边最多，那给0分配权重最大，以这种idea计算最终的结果一定是最大的。
***/

class Solution {
    public long maximumImportance(int n, int[][] roads) {
        int[] array = new int[n];
        for (int i = 0; i < roads.length; i++) {
            array[roads[i][0]]++;
            array[roads[i][1]]++;
        }
        //ascending order
        Arrays.sort(array);
        long res = 0;
        for (int i = n - 1; i >= 0; i--) {
            res += (long)array[i] * (i + 1);
        }
        return res;
    }
}

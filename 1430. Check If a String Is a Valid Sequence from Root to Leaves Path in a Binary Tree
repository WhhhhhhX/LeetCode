Given a binary tree where each path going from the root to any leaf form a valid sequence, check if a given string is a valid sequence in such binary tree. 

We get the given string from the concatenation of an array of integers arr and the concatenation of all values of the nodes along a path results in a sequence in the given binary tree.



/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isValidSequence(TreeNode root, int[] arr) {
        if (root == null) {
            return arr == null || arr.length == 0;
        }
        return helper(root, arr, 0);
    }
    private boolean helper(TreeNode root, int[] arr, int index) {
        if (root == null || index == arr.length) {
            return false;
        }
        if (root.left == null && root.right == null) {
            return root.val == arr[index] && index == arr.length - 1;
        } 
        
        if (root.val != arr[index]) {
            return false;
        }
        return helper(root.left, arr, index + 1) || helper(root.right, arr, index + 1);
    }
}

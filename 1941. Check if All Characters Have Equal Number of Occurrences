Given a string s, return true if s is a good string, or false otherwise.

A string s is good if all the characters that appear in s have the same number of occurrences (i.e., the same frequency).

 

Example 1:

Input: s = "abacbc"
Output: true
Explanation: The characters that appear in s are 'a', 'b', and 'c'. All characters occur 2 times in s.

class Solution {
    public boolean areOccurrencesEqual(String s) {
        if (s == null || s.length() == 0) {
            return false;
        }
        int[] map = new int[26];
        
        for (char c : s.toCharArray()) {
            map[c - 'a']++;
        }
        int freq = map[s.charAt(0) - 'a'];
        for (int i : map) {
            if (i != 0 && i != freq) {
                return false;
            }
        }
        return true;
    }
}
